class Solution {
    private:
    bool isSubSequence(string substr,string str){
        int i=0;
        int j=0;
        if(str.size()<substr.size())return false;
        while(j<substr.size()&&i<str.size()){
            if(str[i]==substr[j]){
                i++;
                j++;
            }
            else{
                i++;
            }
        }
        if(j==substr.size())return true;
        return false;
    }
public:
    int numMatchingSubseq(string s, vector<string>& words) {
       int n=words.size();
       int count=0;
       unordered_map<string,int>mp;
       for(int i=0;i<words.size();i++){
           if(mp.count(words[i]))count+=mp[words[i]];
           else{
               count+=mp[words[i]]=isSubSequence(words[i],s);
           }
       }
       return count;
    }
};
