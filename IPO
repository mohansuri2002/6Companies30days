class Solution {
public:
    int findMaximizedCapital(int k, int w, vector<int>& profits, vector<int>& capital) {
        priority_queue<pair<int,int>>pq;
        vector<pair<int,int>>v;
        int n=profits.size();
        for(int i=0;i<n;i++){
             v.push_back({capital[i],profits[i]});
        }
        sort(v.begin(),v.end());
        int i=0;
       
        while(k){
            while(i<n){
                if(v[i].first<=w){
                    pq.push({v[i].second,v[i].first});
                    i++;
                }
                else{
                    break;
                }
            }
            if(!pq.empty()){
            k--;
            auto it=pq.top();
            pq.pop();
           
            w+=it.first;
            }
            else{
                break;
            }
        }
        return w;
    }
};
