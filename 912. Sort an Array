class Solution {
    private:
    void merge(vector<int>& a,int l,int m,int r){
        int l_sz=m-l+1;
        int r_sz=r-m;
        int L[l_sz+1];
        int R[r_sz+1];
        for(int i=0;i<l_sz;i++){
            L[i]=a[i+l];
        }
        for(int i=0;i<r_sz;i++){
            R[i]=a[i+m+1];
        }
        L[l_sz]=R[r_sz]=INT_MAX;
        int l_i=0;
        int r_i=0;
        for(int i=l;i<=r;i++){
            if(L[l_i]<=R[r_i]){
                a[i]=L[l_i];
                l_i++;
            }else{
                a[i]=R[r_i];
                r_i++;
            }
        }
    }
      void merge_sort(vector<int>& nums,int l,int r){
          if(l<r){
              int mid=l+(r-l)/2;
              merge_sort(nums,l,mid);
              merge_sort(nums,mid+1,r);
              merge(nums,l,mid,r);
          }
      }
public:
    vector<int> sortArray(vector<int>& nums) {
        int n=nums.size();
        merge_sort(nums,0,n-1);
        return nums;
    }
};
