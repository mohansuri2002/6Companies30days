class Solution {
public:
    double knightProbability(int n, int k, int row, int column) {
        vector<vector<double>>curr(n,vector<double>(n,0));
       
        curr[row][column]=1;
        for(int move=1;move<=k;move++){
            vector<vector<double>>next(n,vector<double>(n,0));
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    if(curr[i][j]!=0){
                        int prow[]={-2,-1,1,2,2,1,-1,-2};
                        int pcol[]={1,2,2,1,-1,-2,-2,-1};
                        for(int k=0;k<8;k++){
                            int nrow=i+prow[k];
                            int ncol=j+pcol[k];
                            if(nrow>=0&&ncol>=0&&nrow<n&&ncol<n){
                                next[nrow][ncol]+=curr[i][j]/8.0;
                            }
                        }
                    }
                }
            }
            curr=next;
            
        }
        double ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(curr[i][j]!=0)
                  ans+=curr[i][j];
            }
        }
        return ans;
    }
};
